version: 2
jobs:
  build:
    working_directory: ~/project
    docker:
    - image: circleci/node:8
    steps:
    - checkout
    - restore_cache:
        key: react-native-ci-{{ checksum "package-lock.json" }}
    - run: npm install
    - save_cache:
        key: react-native-ci-{{ checksum "package-lock.json" }}
        paths:
        - node_modules
    - persist_to_workspace:
        root: ~/project
        paths:
        - node_modules
    - store_test_results:
        path: ~/project/junit.xml

  android:
    working_directory: ~/project/android
    docker:
    - image: circleci/android:api-28-node8-alpha
    steps:
    - checkout:
        path: ~/project
    - attach_workspace:
        at: ~/project
    - restore_cache:
        keys:
        - jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
    - restore_cache:
        keys:
        - 1-gems-android-{{ checksum "Gemfile.lock" }}
    - run: bundle install --path vendor/bundle
    - save_cache:
        key: 1-gems-android-{{ checksum "Gemfile.lock" }}
        paths:
        - vendor/bundle
    - run: bundle exec fastlane build
    - save_cache:
        paths:
        - ~/.gradle
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

  ios:
    macos:
      xcode: "9.4.1"
    working_directory: ~/project/ios
    environment:
      FL_OUTPUT_DIR: ~/project/output
    shell: /bin/bash --login -o pipefail
    steps:
    - checkout:
        path: ~/project

    - restore_cache:
        key: react-native-ci-{{ checksum "../package-lock.json" }}
    - run: npm install
    - save_cache:
        key: react-native-ci-{{ checksum "../package-lock.json" }}
        paths:
        - ../node_modules

    - run:
        name: Set Ruby Version
        command:  echo "ruby-2.4" > ~/.ruby-version
    - restore_cache:
        key: 1-gems-ios-{{ checksum "Gemfile.lock" }}
    - run:
        name: Fetch CocoaPods Specs
        command: |
          curl https://cocoapods-specs.circleci.com/fetch-cocoapods-repo-from-s3.sh | bash -s cf
    - run: bundle install --path vendor/bundle
    - run: bundle exec pod install
    - run: bundle update fastlane
    - save_cache:
        key: 1-gems-ios-{{ checksum "Gemfile.lock" }}
        paths:
        - vendor/bundle

    - run: bundle exec fastlane build
    - store_artifacts:
        path: ~/project/output

  build_deploy_android_dev:
    working_directory: ~/project/android
    docker:
    - image: circleci/android:api-28-node8-alpha
    steps:
    - checkout:
        path: ~/project
    - attach_workspace:
        at: ~/project
    - restore_cache:
        keys:
        - jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
    - restore_cache:
        keys:
        - 1-gems-android-{{ checksum "Gemfile.lock" }}
    - run: bundle install --path vendor/bundle
    - save_cache:
        key: 1-gems-android-{{ checksum "Gemfile.lock" }}
        paths:
        - vendor/bundle
    - run: sudo apt-get install awscli
    - run: sudo apt-get install imagemagick
    - run: aws s3 cp s3://fastlane-qpark/solinor-qpark-release-key.keystore  /home/circleci/project/android/app/solinor-qpark-release-key.keystore
    - run: aws s3 cp s3://fastlane-qpark/google-play-api-secret.json  /home/circleci/project/android/fastlane/google-play-api-secret.json
    - run: aws s3 cp s3://fastlane-qpark/gradle.properties /home/circleci/.gradle/gradle.properties
    - run: bundle exec fastlane android_dev_deploy
    - save_cache:
        paths:
        - ~/.gradle
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

  build_deploy_android_staging:
    working_directory: ~/project/android
    docker:
    - image: circleci/android:api-28-node8-alpha
    steps:
    - checkout:
        path: ~/project
    - attach_workspace:
        at: ~/project
    - restore_cache:
        keys:
        - jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
    - restore_cache:
        keys:
        - 1-gems-android-{{ checksum "Gemfile.lock" }}
    - run: bundle install --path vendor/bundle
    - save_cache:
        key: 1-gems-android-{{ checksum "Gemfile.lock" }}
        paths:
        - vendor/bundle
    - run: bundle exec fastlane android_staging_deploy
    - save_cache:
        paths:
        - ~/.gradle
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

workflows:
  version: 2
  node-android-ios:
    jobs:
    - build
    - android:
        requires:
        - build
    - ios:
        requires:
        - build
    - build_deploy_android_dev:
        requires:
        - build
        - android
        filters:
          branches:
            only: dev

